# https://www.playframework.com/documentation/latest/Configuration
play.http.secret.key="QCY?tAnfk?aZ?iwrNwnxIlR6CilushiiYPIUJo;j56783Tf:G3gf:90Latabg@5241AB"
play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoModule"
play.filters.enabled=[]


mongodb {
  uri = "mongodb://localhost:27017/order"
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  logLevel = "DEBUG"
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  log-dead-letters = 10
  log-dead-letters-during-shutdown = on
  log-config-on-start = off
  default-dispatcher {
    fork-join-executor {
      parallelism-min = 8
    }
  }
  actor {
    debug {
      # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill et.c.)
      autoreceive = on
      # enable DEBUG logging of actor lifecycle changes
      lifecycle = on
      # enable DEBUG logging of unhandled messages
      unhandled = on
      # enable DEBUG logging of all LoggingFSMs for events, transitions and timers
      fsm = on
      # enable function of LoggingReceive, which is to log any received message at
      # DEBUG level
      receive = on
      # enable DEBUG logging of subscription changes on the eventStream
      event-stream = on
    }
    warn-about-java-serializer-usage = off
  }
  test {
    timefactor = 1
    single-expect-default = 10s
  }
  stream {
    materializer {
      debug-logging = on  // Enable additional troubleshooting logging at DEBUG log level
    }
  }
  http {
    host-connection-pool {
      max-connections = 4
      max-retries = 20
    }
  }
  persistence {
    journal {
      #      plugin = "akka.persistence.journal.leveldb"
      plugin = "akka-contrib-mongodb-persistence-journal"
    }
    snapshot-store {
      #      plugin = "akka.persistence.snapshot-store.local"
      plugin = "akka-contrib-mongodb-persistence-snapshot"
    }
    fsm {
      snapshot-after = 1000
    }
  }
  contrib {
    persistence {
      mongodb {
        mongo {
          mongouri = "mongodb://localhost:27017/order"

          #Mongo Collection, Index settings
          journal-collection = "persistent_journal"
          journal-index = "journal_index"
          snaps-collection = "persistent_snapshots"
          snaps-index = "snaps_index"
          #Mongo Write Concern settings
          journal-write-concern = "Acknowledged"
          journal-wtimeout = 3s
          journal-fsync = false
          snaps-wtimeout = 3s
          snaps-fsync = false
          #Circuit breaker settings
          breaker {
            maxTries = 5
            timeout {
              call = 500s
              reset = 1000s
            }
          }

        }
        #Reactive Mongo Driver - failover settings
        rxmongo {
          failover {
            initialDelay = 50ms
            retries = 3
            growth = exp
            factor = 1.5
          }
        }

        casbah {
          minpoolsize = 0
          maxpoolsize = 100
          waitqueuemultiple = 5
          serverselectiontimeout = 30seconds
          waitqueuetimeout = 2minutes
          maxidletime = 0
          maxlifetime = 0
          connecttimeout = 10seconds
          sockettimeout = 0seconds
          socketkeepalive = false
          ssl = false
          sslinvalidhostnameallowed = false
          heartbeatfrequency = 10seconds
          minheartbeatfrequency = 500ms
          heartbeatconnecttimeout = 20seconds
          heartbeatsockettimeout = 20seconds
        }
      }
    }
  }
}